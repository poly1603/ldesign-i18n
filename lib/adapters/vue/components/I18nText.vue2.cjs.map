{"version":3,"file":"I18nText.vue2.cjs","sources":["../../../../src/adapters/vue/components/I18nText.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport type { InterpolationParams, MessageKey } from '../../../types';\r\nimport { computed } from 'vue';\r\nimport { useI18n } from '../composables/useI18n';\r\n\r\ninterface Props {\r\n  keypath: MessageKey;\r\n  tag?: string;\r\n  params?: InterpolationParams;\r\n  locale?: string;\r\n  plural?: number;\r\n  defaultValue?: string;\r\n}\r\n\r\nconst props = withDefaults(defineProps<Props>(), {\r\n  tag: 'span'\r\n});\r\n\r\nconst { t, tc } = useI18n();\r\n\r\nconst translatedText = computed(() => {\r\n  const options = {\r\n    params: props.params,\r\n    locale: props.locale,\r\n    defaultValue: props.defaultValue\r\n  };\r\n  \r\n  if (props.plural !== undefined) {\r\n    return tc(props.keypath, props.plural, props.params);\r\n  }\r\n  \r\n  return t(props.keypath, options);\r\n});\r\n</script>\r\n\r\n<template>\r\n  <component :is=\"tag\">\r\n    {{ translatedText }}\r\n  </component>\r\n</template>"],"names":["props","__props","t","tc","useI18n","translatedText","computed","options","params","locale","defaultValue","plural","undefined","keypath","_openBlock","_createBlock","_resolveDynamicComponent","tag","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,IAAA,MAAMA,KAAAA,GAAQC,OAAAA;AAId,IAAA,MAAM;AAAA,MAAEC,CAAAA;AAAAA,MAAGC;AAAAA,QAAOC,eAAAA,EAAQ;AAE1B,IAAA,MAAMC,cAAAA,GAAiBC,aAAS,MAAM;AACpC,MAAA,MAAMC,OAAAA,GAAU;AAAA,QACdC,QAAQR,KAAAA,CAAMQ,MAAAA;AAAAA,QACdC,QAAQT,KAAAA,CAAMS,MAAAA;AAAAA,QACdC,cAAcV,KAAAA,CAAMU;AAAAA,OACtB;AAEA,MAAA,IAAIV,KAAAA,CAAMW,WAAWC,MAAAA,EAAW;AAC9B,QAAA,OAAOT,GAAGH,KAAAA,CAAMa,OAAAA,EAASb,KAAAA,CAAMW,MAAAA,EAAQX,MAAMQ,MAAM,CAAA;AAAA,MACrD;AAEA,MAAA,OAAON,CAAAA,CAAEF,KAAAA,CAAMa,OAAAA,EAASN,OAAO,CAAA;AAAA,IACjC,CAAC,CAAA;;AAIC,MAAA,OAAAO,eAAA,EAAAC,eAAAA,CAEYC,4BAFIC,IAAAA,CAAAA,GAAG,GAAA,IAAA,EAAA;AAAA,6BACjB,MAAoB;8BAAjBZ,eAAAa,KAAc,CAAA;AAAA,UAAA;AAAA;AAAA,SAAA;;;;;;;;;;;;;"}